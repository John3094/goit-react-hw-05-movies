{"version":3,"file":"static/js/310.e05d692e.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.jsx","pages/Movies/Movies.styled.js","pages/Movies/Movies.jsx","service/Api.js"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <ul>\n      {movies.map(({ id, title, name, original_title }) => (\n        <li key={id}>\n          <Link to={`/movies/${id}`} state={{ from: location }}>\n            {title || name || original_title}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.array.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const SearchBox = styled.div`\n  display: block;\n  margin-top: 21px;\n  padding-left: 20px;\n`;\n\nexport const Input = styled.input`\n  border-radius: 3px;\n  box-shadow: 0px 5px 5px grey;\n`;\n\nexport const Label = styled.label`\n  color: red;\n`;\n\nexport const Button = styled.button`\n  color: red;\n  border-radius: 3px;\n  box-shadow: 0px 5px 5px grey;\n`;\n","import { MoviesList } from 'components/MoviesList/MoviesList';\nimport { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getMovieByName } from '../../service/Api';\nimport { SearchBox, Input, Label, Button } from './Movies.styled';\nimport toast, { Toaster } from 'react-hot-toast';\nimport { Loader } from '../../components/Loader/Loader';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [value, setValue] = useState(() => searchParams.get('query') ?? '');\n  const query = searchParams.get('query');\n  const [isLoading, setIsLoading] = useState(false);\n\n  const updateQueryString = e => {\n    e.preventDefault();\n    if (value === '') {\n      return setSearchParams({});\n    }\n    setSearchParams({ query: value });\n  };\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n    const fetchMovies = async () => {\n      try {\n        setIsLoading(true);\n        const movies = await getMovieByName(query);\n        setMovies(movies);\n      } catch (error) {\n        toast.error('Try again');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchMovies();\n  }, [query]);\n\n  const hadleInputChange = e => {\n    setValue(e.target.value);\n  };\n\n  return (\n    <SearchBox>\n      {isLoading && <Loader />}\n      <Label>Movies</Label>\n      <form autoComplete=\"off\" onSubmit={updateQueryString}>\n        <Input type=\"text\" value={value} onChange={hadleInputChange} />\n        <Button type=\"submit\">Search</Button>\n      </form>\n      {movies && <MoviesList movies={movies} />}\n      <Toaster\n        toastOptions={{ style: { background: '#ff1111', color: '#fff' } }}\n      />\n      {movies && movies.length === 0 && (\n        <div>There are not movies with such name</div>\n      )}\n    </SearchBox>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.params = {\n  api_key: 'd525f3289f5c138ed98ba04c26330946',\n  language: 'en-US',\n};\n\nexport const IMAGE_URL = 'https://image.tmdb.org/t/p/w300/';\n\nexport const getMoviesTrend = async period => {\n  try {\n    const response = await axios.get(`trending/movie/${period}`);\n    return response.data.results;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const getMovieDetails = async id => {\n  try {\n    const response = await axios.get(`movie/${id}`);\n    return response.data;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const getMovieCast = async id => {\n  try {\n    const response = await axios.get(`movie/${id}/credits`);\n    return response.data.cast;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const getMovieReviews = async id => {\n  try {\n    const response = await axios.get(`movie/${id}/reviews`);\n    return response.data.results;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const getMovieByName = async query => {\n  try {\n    const response = await axios.get(`search/movie?query=${query}`);\n    return response.data.results;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n"],"names":["MoviesList","movies","location","useLocation","map","id","title","name","original_title","to","state","from","SearchBox","styled","Input","Label","Button","useState","setMovies","useSearchParams","searchParams","setSearchParams","get","value","setValue","query","isLoading","setIsLoading","useEffect","fetchMovies","getMovieByName","toast","Loader","autoComplete","onSubmit","e","preventDefault","type","onChange","target","toastOptions","style","background","color","length","axios","api_key","language","IMAGE_URL","getMoviesTrend","period","response","data","results","console","log","message","getMovieDetails","getMovieCast","cast","getMovieReviews"],"sourceRoot":""}