{"version":3,"file":"static/js/866.d01e6dde.chunk.js","mappings":"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","sources":["components/BtnGoBack/BtnGoBack.styled.js","components/BtnGoBack/BtnGoBack.jsx","pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx","service/Api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Button = styled.button`\n  color: red;\n  background-color: #ffecd1;\n  border-radius: 4px;\n`;\n","import { useNavigate } from 'react-router-dom';\nimport { Button } from './BtnGoBack.styled';\nimport PropTypes from 'prop-types';\n\nexport const BtnGoBack = ({ back }) => {\n  const navigate = useNavigate();\n\n  return (\n    <Button type=\"button\" onClick={() => navigate(back)}>\n      Go Back\n    </Button>\n  );\n};\n\nBtnGoBack.propTypes = {\n  back: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n};\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Movie = styled.div`\n  display: flex;\n  width: 650px;\n  height: 600px;\n  padding: 10px;\n  border-bottom: 1px solid grey;\n`;\n\nexport const Img = styled.img`\n  width: 100%;\n  margin-right: 15px;\n`;\n\nexport const MovieInfo = styled.div`\n  padding: 10px;\n  border-bottom: 1px solid grey;\n`;\n\nexport const NavItem = styled(NavLink)`\n  color: black;\n  text-decoration: none;\n  font-size: 20px;\n  &.active {\n    color: red;\n    text-shadow: 3px 5px 3px grey;\n  }\n`;\n","import { useState, useEffect, useRef, Suspense } from 'react';\nimport { Outlet, useParams, useLocation } from 'react-router-dom';\nimport { getMovieDetails } from 'service/Api';\nimport { BtnGoBack } from '../../components/BtnGoBack/BtnGoBack';\nimport { Movie, Img, MovieInfo, NavItem } from './MovieDetails.styled';\nimport { IMAGE_URL } from '../../service/Api';\nimport toast, { Toaster } from 'react-hot-toast';\nimport { Loader } from '../../components/Loader/Loader';\n\nconst MovieDetails = () => {\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/');\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const [isLoding, setIsLoading] = useState(false);\n  const noImage =\n    'https://www.escapeauthority.com/wp-content/uploads/2116/11/No-image-found.jpg';\n\n  useEffect(() => {\n    const featchMovie = async () => {\n      try {\n        setIsLoading(true);\n        const movie = await getMovieDetails(movieId);\n        setMovie(movie);\n      } catch (error) {\n        toast.error(\"This didn't work, try again.\");\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    featchMovie();\n  }, [movieId]);\n\n  if (!movie) {\n    return null;\n  }\n\n  const { title, poster_path, overview, genres, vote_average } = movie;\n\n  return (\n    <>\n      <BtnGoBack back={backLinkLocationRef.current} />\n      <Movie>\n        {poster_path ? (\n          <Img src={`${IMAGE_URL}${poster_path}`} alt={title} />\n        ) : (\n          <Img src={noImage} alt={'Noimage'} />\n        )}\n        <div>\n          <h1>{title}</h1>\n          <p>User score: {Math.round(vote_average * 10)}%</p>\n          <h2>Overview</h2>\n          <p>{overview}</p>\n          <h2>Genres</h2>\n          <p>{genres.map(genre => genre.name + ' ')}</p>\n        </div>\n      </Movie>\n      <MovieInfo>\n        <ul>\n          <li>\n            <NavItem to=\"cast\">Cast</NavItem>\n          </li>\n          <li>\n            <NavItem to=\"reviews\">Reviews</NavItem>\n          </li>\n        </ul>\n      </MovieInfo>\n      <Toaster\n        toastOptions={{ style: { background: '#ff1111', color: '#fff' } }}\n      />\n      <Suspense fallback={isLoding && <Loader />}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.params = {\n  api_key: 'd525f3289f5c138ed98ba04c26330946',\n  language: 'en-US',\n};\n\nexport const IMAGE_URL = 'https://image.tmdb.org/t/p/w300/';\n\nexport const getMoviesTrend = async period => {\n  try {\n    const response = await axios.get(`trending/movie/${period}`);\n    return response.data.results;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const getMovieDetails = async id => {\n  try {\n    const response = await axios.get(`movie/${id}`);\n    return response.data;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const getMovieCast = async id => {\n  try {\n    const response = await axios.get(`movie/${id}/credits`);\n    return response.data.cast;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const getMovieReviews = async id => {\n  try {\n    const response = await axios.get(`movie/${id}/reviews`);\n    return response.data.results;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const getMovieByName = async query => {\n  try {\n    const response = await axios.get(`search/movie?query=${query}`);\n    return response.data.results;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n"],"names":["Button","styled","BtnGoBack","back","navigate","useNavigate","type","onClick","Movie","Img","MovieInfo","NavItem","NavLink","location","useLocation","backLinkLocationRef","useRef","state","from","movieId","useParams","useState","movie","setMovie","isLoding","setIsLoading","useEffect","featchMovie","getMovieDetails","toast","title","poster_path","overview","genres","vote_average","current","src","IMAGE_URL","alt","Math","round","map","genre","name","to","toastOptions","style","background","color","Suspense","fallback","Loader","axios","api_key","language","getMoviesTrend","period","response","data","results","console","log","message","id","getMovieCast","cast","getMovieReviews","getMovieByName","query"],"sourceRoot":""}