{"version":3,"file":"static/js/544.685bfa0b.chunk.js","mappings":"oMAGaA,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACrBC,GAAWC,EAAAA,EAAAA,MACjB,OACE,wBACGF,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,KAAMC,EAApB,EAAoBA,eAApB,OACV,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaJ,GAAMK,MAAO,CAAEC,KAAMT,GAA1C,SACGI,GAASC,GAAQC,KAFbH,EADC,KASjB,C,0HCqBD,UA/Ba,WACX,OAA4BO,EAAAA,EAAAA,UAAS,IAArC,eAAOX,EAAP,KAAeY,EAAf,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,oGAEhBF,GAAa,GAFG,UAGKG,EAAAA,EAAAA,IAAe,OAHpB,OAGVjB,EAHU,OAIhBY,EAAUZ,GAJM,gDAMhBkB,EAAAA,GAAAA,MAAY,qBANI,yBAQhBJ,GAAa,GARG,4EAAH,qDAWjBE,GACD,GAAE,KAGD,4BACE,wBAAI,mBACHH,IAAa,SAAC,IAAD,IACbb,EAAOmB,OAAS,IAAK,SAAC,IAAD,CAAYnB,OAAQA,KAC1C,SAAC,KAAD,CACEoB,aAAc,CAAEC,MAAO,CAAEC,WAAY,UAAWC,MAAO,aAI9D,C,uNCjCDC,EAAAA,EAAAA,SAAAA,QAAyB,gCACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAAS,mCACTC,SAAU,SAGL,IAAMC,EAAY,mCAEZV,EAAc,mCAAG,WAAMW,GAAN,gGAEHJ,EAAAA,EAAAA,IAAA,yBAA4BI,IAFzB,cAEpBC,EAFoB,yBAGnBA,EAASC,KAAKC,SAHK,gCAK1BC,QAAQC,IAAI,KAAMC,SALQ,yDAAH,sDASdC,EAAe,mCAAG,WAAM/B,GAAN,gGAEJoB,EAAAA,EAAAA,IAAA,gBAAmBpB,IAFf,cAErByB,EAFqB,yBAGpBA,EAASC,MAHW,gCAK3BE,QAAQC,IAAI,KAAMC,SALS,yDAAH,sDASfE,EAAY,mCAAG,WAAMhC,GAAN,gGAEDoB,EAAAA,EAAAA,IAAA,gBAAmBpB,EAAnB,aAFC,cAElByB,EAFkB,yBAGjBA,EAASC,KAAKO,MAHG,gCAKxBL,QAAQC,IAAI,KAAMC,SALM,yDAAH,sDASZI,EAAe,mCAAG,WAAMlC,GAAN,gGAEJoB,EAAAA,EAAAA,IAAA,gBAAmBpB,EAAnB,aAFI,cAErByB,EAFqB,yBAGpBA,EAASC,KAAKC,SAHM,gCAK3BC,QAAQC,IAAI,KAAMC,SALS,yDAAH,sDASfK,EAAc,mCAAG,WAAMC,GAAN,gGAEHhB,EAAAA,EAAAA,IAAA,6BAAgCgB,IAF7B,cAEpBX,EAFoB,yBAGnBA,EAASC,KAAKC,SAHK,gCAK1BC,QAAQC,IAAI,KAAMC,SALQ,yDAAH,qD","sources":["components/MoviesList/MoviesList.jsx","pages/Home/Home.jsx","service/Api.js"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <ul>\n      {movies.map(({ id, title, name, original_title }) => (\n        <li key={id}>\n          <Link to={`/movies/${id}`} state={{ from: location }}>\n            {title || name || original_title}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.array.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport { getMoviesTrend } from 'service/Api';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport { Loader } from '../../components/Loader/Loader';\nimport toast, { Toaster } from 'react-hot-toast';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      try {\n        setIsLoading(true);\n        const movies = await getMoviesTrend('day');\n        setMovies(movies);\n      } catch (error) {\n        toast.error(\"This didn't work.\");\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchMovies();\n  }, []);\n\n  return (\n    <div>\n      <h1>Trending today</h1>\n      {isLoading && <Loader />}\n      {movies.length > 0 && <MoviesList movies={movies} />}\n      <Toaster\n        toastOptions={{ style: { background: '#ff1111', color: '#fff' } }}\n      />\n    </div>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.params = {\n  api_key: 'd525f3289f5c138ed98ba04c26330946',\n  language: 'en-US',\n};\n\nexport const IMAGE_URL = 'https://image.tmdb.org/t/p/w300/';\n\nexport const getMoviesTrend = async period => {\n  try {\n    const response = await axios.get(`trending/movie/${period}`);\n    return response.data.results;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const getMovieDetails = async id => {\n  try {\n    const response = await axios.get(`movie/${id}`);\n    return response.data;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const getMovieCast = async id => {\n  try {\n    const response = await axios.get(`movie/${id}/credits`);\n    return response.data.cast;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const getMovieReviews = async id => {\n  try {\n    const response = await axios.get(`movie/${id}/reviews`);\n    return response.data.results;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const getMovieByName = async query => {\n  try {\n    const response = await axios.get(`search/movie?query=${query}`);\n    return response.data.results;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n"],"names":["MoviesList","movies","location","useLocation","map","id","title","name","original_title","to","state","from","useState","setMovies","isLoading","setIsLoading","useEffect","fetchMovies","getMoviesTrend","toast","length","toastOptions","style","background","color","axios","api_key","language","IMAGE_URL","period","response","data","results","console","log","message","getMovieDetails","getMovieCast","cast","getMovieReviews","getMovieByName","query"],"sourceRoot":""}